// Generated by view binder compiler. Do not edit!
package com.example.babysitter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.babysitter.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBabySitterDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView babysitterAddress;

  @NonNull
  public final TextView babysitterDescription;

  @NonNull
  public final ImageView babysitterImage;

  @NonNull
  public final TextView babysitterName;

  @NonNull
  public final TextView babysitterRating;

  @NonNull
  public final MaterialButton checkAvailiability;

  @NonNull
  public final RecyclerView list;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final MaterialButton viewReviews;

  private FragmentBabySitterDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView babysitterAddress, @NonNull TextView babysitterDescription,
      @NonNull ImageView babysitterImage, @NonNull TextView babysitterName,
      @NonNull TextView babysitterRating, @NonNull MaterialButton checkAvailiability,
      @NonNull RecyclerView list, @NonNull TextView textView21,
      @NonNull MaterialButton viewReviews) {
    this.rootView = rootView;
    this.babysitterAddress = babysitterAddress;
    this.babysitterDescription = babysitterDescription;
    this.babysitterImage = babysitterImage;
    this.babysitterName = babysitterName;
    this.babysitterRating = babysitterRating;
    this.checkAvailiability = checkAvailiability;
    this.list = list;
    this.textView21 = textView21;
    this.viewReviews = viewReviews;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBabySitterDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBabySitterDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_baby_sitter_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBabySitterDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.babysitterAddress;
      TextView babysitterAddress = ViewBindings.findChildViewById(rootView, id);
      if (babysitterAddress == null) {
        break missingId;
      }

      id = R.id.babysitterDescription;
      TextView babysitterDescription = ViewBindings.findChildViewById(rootView, id);
      if (babysitterDescription == null) {
        break missingId;
      }

      id = R.id.babysitterImage;
      ImageView babysitterImage = ViewBindings.findChildViewById(rootView, id);
      if (babysitterImage == null) {
        break missingId;
      }

      id = R.id.babysitterName;
      TextView babysitterName = ViewBindings.findChildViewById(rootView, id);
      if (babysitterName == null) {
        break missingId;
      }

      id = R.id.babysitterRating;
      TextView babysitterRating = ViewBindings.findChildViewById(rootView, id);
      if (babysitterRating == null) {
        break missingId;
      }

      id = R.id.check_availiability;
      MaterialButton checkAvailiability = ViewBindings.findChildViewById(rootView, id);
      if (checkAvailiability == null) {
        break missingId;
      }

      id = R.id.list;
      RecyclerView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.view_reviews;
      MaterialButton viewReviews = ViewBindings.findChildViewById(rootView, id);
      if (viewReviews == null) {
        break missingId;
      }

      return new FragmentBabySitterDetailsBinding((ConstraintLayout) rootView, babysitterAddress,
          babysitterDescription, babysitterImage, babysitterName, babysitterRating,
          checkAvailiability, list, textView21, viewReviews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
