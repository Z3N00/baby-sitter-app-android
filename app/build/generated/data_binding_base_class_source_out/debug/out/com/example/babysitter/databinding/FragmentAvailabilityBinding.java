// Generated by view binder compiler. Do not edit!
package com.example.babysitter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.applandeo.materialcalendarview.CalendarView;
import com.example.babysitter.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAvailabilityBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CalendarView calendarView;

  @NonNull
  public final CalendarView calendarView2;

  @NonNull
  public final MaterialButton proceedButton;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView11;

  private FragmentAvailabilityBinding(@NonNull ScrollView rootView,
      @NonNull CalendarView calendarView, @NonNull CalendarView calendarView2,
      @NonNull MaterialButton proceedButton, @NonNull TextView textView10,
      @NonNull TextView textView11) {
    this.rootView = rootView;
    this.calendarView = calendarView;
    this.calendarView2 = calendarView2;
    this.proceedButton = proceedButton;
    this.textView10 = textView10;
    this.textView11 = textView11;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAvailabilityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAvailabilityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_availability, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAvailabilityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.calendarView;
      CalendarView calendarView = ViewBindings.findChildViewById(rootView, id);
      if (calendarView == null) {
        break missingId;
      }

      id = R.id.calendarView2;
      CalendarView calendarView2 = ViewBindings.findChildViewById(rootView, id);
      if (calendarView2 == null) {
        break missingId;
      }

      id = R.id.proceedButton;
      MaterialButton proceedButton = ViewBindings.findChildViewById(rootView, id);
      if (proceedButton == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView11;
      TextView textView11 = ViewBindings.findChildViewById(rootView, id);
      if (textView11 == null) {
        break missingId;
      }

      return new FragmentAvailabilityBinding((ScrollView) rootView, calendarView, calendarView2,
          proceedButton, textView10, textView11);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
