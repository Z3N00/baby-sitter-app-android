// Generated by view binder compiler. Do not edit!
package com.example.babysitter.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.babysitter.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemBabySitterBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView babysitterImage;

  @NonNull
  public final TextView babysitterName;

  @NonNull
  public final TextView babysitterRating;

  @NonNull
  public final CardView itemBabySitter;

  @NonNull
  public final MaterialButton viewProfileButton;

  private ItemBabySitterBinding(@NonNull CardView rootView, @NonNull ImageView babysitterImage,
      @NonNull TextView babysitterName, @NonNull TextView babysitterRating,
      @NonNull CardView itemBabySitter, @NonNull MaterialButton viewProfileButton) {
    this.rootView = rootView;
    this.babysitterImage = babysitterImage;
    this.babysitterName = babysitterName;
    this.babysitterRating = babysitterRating;
    this.itemBabySitter = itemBabySitter;
    this.viewProfileButton = viewProfileButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemBabySitterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemBabySitterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_baby_sitter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemBabySitterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.babysitterImage;
      ImageView babysitterImage = ViewBindings.findChildViewById(rootView, id);
      if (babysitterImage == null) {
        break missingId;
      }

      id = R.id.babysitterName;
      TextView babysitterName = ViewBindings.findChildViewById(rootView, id);
      if (babysitterName == null) {
        break missingId;
      }

      id = R.id.babysitterRating;
      TextView babysitterRating = ViewBindings.findChildViewById(rootView, id);
      if (babysitterRating == null) {
        break missingId;
      }

      CardView itemBabySitter = (CardView) rootView;

      id = R.id.viewProfileButton;
      MaterialButton viewProfileButton = ViewBindings.findChildViewById(rootView, id);
      if (viewProfileButton == null) {
        break missingId;
      }

      return new ItemBabySitterBinding((CardView) rootView, babysitterImage, babysitterName,
          babysitterRating, itemBabySitter, viewProfileButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
